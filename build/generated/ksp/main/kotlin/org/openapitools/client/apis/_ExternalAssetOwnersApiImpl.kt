// Generated by Ktorfit
@file:Suppress("warnings")

package org.openapitools.client.apis

import de.jensklingenberg.ktorfit.Ktorfit
import de.jensklingenberg.ktorfit.`internal`.ClassProvider
import de.jensklingenberg.ktorfit.`internal`.InternalKtorfitApi
import de.jensklingenberg.ktorfit.`internal`.KtorfitConverterHelper
import de.jensklingenberg.ktorfit.converter.TypeData
import io.ktor.client.request.HttpRequestBuilder
import io.ktor.client.request.headers
import io.ktor.client.request.parameter
import io.ktor.client.request.setBody
import io.ktor.http.HttpMethod
import io.ktor.http.URLBuilder
import io.ktor.http.decodeURLQueryComponent
import io.ktor.http.encodeURLPath
import io.ktor.http.takeFrom
import io.ktor.util.reflect.typeInfo
import kotlin.Int
import kotlin.Long
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import org.openapitools.client.models.ExternalOwnerJournalEntryData
import org.openapitools.client.models.ExternalOwnerTransferJournalEntryData
import org.openapitools.client.models.ExternalTransferData
import org.openapitools.client.models.PageExternalTransferData
import org.openapitools.client.models.PagedRequestExternalAssetOwnerSearchRequest
import org.openapitools.client.models.PostInitiateTransferRequest
import org.openapitools.client.models.PostInitiateTransferResponse

@OptIn(InternalKtorfitApi::class)
public class _ExternalAssetOwnersApiImpl(
  private val _ktorfit: Ktorfit,
) : ExternalAssetOwnersApi {
  private val _helper: KtorfitConverterHelper = KtorfitConverterHelper(_ktorfit)

  override suspend fun getActiveTransfer(
    transferExternalId: String?,
    loanId: Long?,
    loanExternalId: String?,
  ): ExternalTransferData {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/external-asset-owners/transfers/active-transfer")
        transferExternalId?.let{ parameter("transferExternalId", "$it") }
        loanId?.let{ parameter("loanId", "$it") }
        loanExternalId?.let{ parameter("loanExternalId", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<ExternalTransferData>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun getJournalEntriesOfOwner(
    ownerExternalId: String,
    offset: Int?,
    limit: Int?,
  ): ExternalOwnerJournalEntryData {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/external-asset-owners/owners/external-id/${"$ownerExternalId".encodeURLPath()}/journal-entries")
        offset?.let{ parameter("offset", "$it") }
        limit?.let{ parameter("limit", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<ExternalOwnerJournalEntryData>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun getJournalEntriesOfTransfer(
    transferId: Long,
    offset: Int?,
    limit: Int?,
  ): ExternalOwnerTransferJournalEntryData {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/external-asset-owners/transfers/${"$transferId".encodeURLPath()}/journal-entries")
        offset?.let{ parameter("offset", "$it") }
        limit?.let{ parameter("limit", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<ExternalOwnerTransferJournalEntryData>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun getTransfers(
    transferExternalId: String?,
    loanId: Long?,
    loanExternalId: String?,
    offset: Int?,
    limit: Int?,
  ): PageExternalTransferData {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/external-asset-owners/transfers")
        transferExternalId?.let{ parameter("transferExternalId", "$it") }
        loanId?.let{ parameter("loanId", "$it") }
        loanExternalId?.let{ parameter("loanExternalId", "$it") }
        offset?.let{ parameter("offset", "$it") }
        limit?.let{ parameter("limit", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PageExternalTransferData>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend
      fun searchInvestorData(pagedRequestExternalAssetOwnerSearchRequest: PagedRequestExternalAssetOwnerSearchRequest?):
      PageExternalTransferData {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/external-asset-owners/search")
        }
        setBody(pagedRequestExternalAssetOwnerSearchRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PageExternalTransferData>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun transferRequestWithId(id: Long, command: String?):
      PostInitiateTransferResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/external-asset-owners/transfers/${"$id".encodeURLPath()}")
        command?.let{ parameter("command", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PostInitiateTransferResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun transferRequestWithId1(externalId: String, command: String?):
      PostInitiateTransferResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/external-asset-owners/transfers/external-id/${"$externalId".encodeURLPath()}")
        command?.let{ parameter("command", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PostInitiateTransferResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun transferRequestWithLoanExternalId(
    loanExternalId: String,
    postInitiateTransferRequest: PostInitiateTransferRequest,
    command: String?,
  ): PostInitiateTransferResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/external-asset-owners/transfers/loans/external-id/${"$loanExternalId".encodeURLPath()}")
        command?.let{ parameter("command", "$it") }
        }
        setBody(postInitiateTransferRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PostInitiateTransferResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun transferRequestWithLoanId(
    loanId: Long,
    postInitiateTransferRequest: PostInitiateTransferRequest,
    command: String?,
  ): PostInitiateTransferResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/external-asset-owners/transfers/loans/${"$loanId".encodeURLPath()}")
        command?.let{ parameter("command", "$it") }
        }
        setBody(postInitiateTransferRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PostInitiateTransferResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }
}

public class _ExternalAssetOwnersApiProvider : ClassProvider<ExternalAssetOwnersApi> {
  override fun create(_ktorfit: Ktorfit): ExternalAssetOwnersApi =
      _ExternalAssetOwnersApiImpl(_ktorfit)
}

public fun Ktorfit.createExternalAssetOwnersApi(): ExternalAssetOwnersApi =
    _ExternalAssetOwnersApiImpl(this)
