// Generated by Ktorfit
@file:Suppress("warnings")

package org.openapitools.client.apis

import de.jensklingenberg.ktorfit.Ktorfit
import de.jensklingenberg.ktorfit.`internal`.ClassProvider
import de.jensklingenberg.ktorfit.`internal`.InternalKtorfitApi
import de.jensklingenberg.ktorfit.`internal`.KtorfitConverterHelper
import de.jensklingenberg.ktorfit.converter.TypeData
import io.ktor.client.request.HttpRequestBuilder
import io.ktor.client.request.headers
import io.ktor.client.request.parameter
import io.ktor.client.request.setBody
import io.ktor.http.HttpMethod
import io.ktor.http.URLBuilder
import io.ktor.http.decodeURLQueryComponent
import io.ktor.http.encodeURLPath
import io.ktor.http.takeFrom
import io.ktor.util.reflect.typeInfo
import kotlin.Boolean
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import org.openapitools.client.models.InteropAccountData
import org.openapitools.client.models.InteropIdentifierAccountResponseData
import org.openapitools.client.models.InteropIdentifierRequestData
import org.openapitools.client.models.InteropIdentifiersResponseData
import org.openapitools.client.models.InteropKycResponseData
import org.openapitools.client.models.InteropQuoteRequestData
import org.openapitools.client.models.InteropQuoteResponseData
import org.openapitools.client.models.InteropTransactionRequestData
import org.openapitools.client.models.InteropTransactionRequestResponseData
import org.openapitools.client.models.InteropTransactionsData
import org.openapitools.client.models.InteropTransferRequestData
import org.openapitools.client.models.InteropTransferResponseData

@OptIn(InternalKtorfitApi::class)
public class _InterOperationApiImpl(
  private val _ktorfit: Ktorfit,
) : InterOperationApi {
  private val _helper: KtorfitConverterHelper = KtorfitConverterHelper(_ktorfit)

  override suspend fun createQuote(interopQuoteRequestData: InteropQuoteRequestData):
      InteropQuoteResponseData {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/interoperation/quotes")
        }
        setBody(interopQuoteRequestData) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<InteropQuoteResponseData>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend
      fun createTransactionRequest(interopTransactionRequestData: InteropTransactionRequestData):
      InteropTransactionRequestResponseData {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/interoperation/requests")
        }
        setBody(interopTransactionRequestData) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<InteropTransactionRequestResponseData>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun deleteAccountIdentifier(
    idType: String,
    idValue: String,
    interopIdentifierRequestData: InteropIdentifierRequestData,
  ): InteropIdentifierAccountResponseData {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("DELETE")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/interoperation/parties/${"$idType".encodeURLPath()}/${"$idValue".encodeURLPath()}")
        }
        setBody(interopIdentifierRequestData) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<InteropIdentifierAccountResponseData>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun deleteAccountIdentifier1(
    idType: String,
    idValue: String,
    subIdOrType: String,
    interopIdentifierRequestData: InteropIdentifierRequestData,
  ): InteropIdentifierAccountResponseData {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("DELETE")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/interoperation/parties/${"$idType".encodeURLPath()}/${"$idValue".encodeURLPath()}/${"$subIdOrType".encodeURLPath()}")
        }
        setBody(interopIdentifierRequestData) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<InteropIdentifierAccountResponseData>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun disburseLoan(accountId: String): String {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/interoperation/transactions/${"$accountId".encodeURLPath()}/disburse")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<String>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun getAccountByIdentifier(idType: String, idValue: String):
      InteropIdentifierAccountResponseData {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/interoperation/parties/${"$idType".encodeURLPath()}/${"$idValue".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<InteropIdentifierAccountResponseData>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun getAccountByIdentifier1(
    idType: String,
    idValue: String,
    subIdOrType: String,
  ): InteropIdentifierAccountResponseData {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/interoperation/parties/${"$idType".encodeURLPath()}/${"$idValue".encodeURLPath()}/${"$subIdOrType".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<InteropIdentifierAccountResponseData>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun getAccountDetails(accountId: String): InteropAccountData {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/interoperation/accounts/${"$accountId".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<InteropAccountData>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun getAccountIdentifiers(accountId: String): InteropIdentifiersResponseData {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/interoperation/accounts/${"$accountId".encodeURLPath()}/identifiers")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<InteropIdentifiersResponseData>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun getAccountTransactions(
    accountId: String,
    debit: Boolean?,
    credit: Boolean?,
    fromBookingDateTime: String?,
    toBookingDateTime: String?,
  ): InteropTransactionsData {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/interoperation/accounts/${"$accountId".encodeURLPath()}/transactions")
        debit?.let{ parameter("debit", "$it") }
        credit?.let{ parameter("credit", "$it") }
        fromBookingDateTime?.let{ parameter("fromBookingDateTime", "$it") }
        toBookingDateTime?.let{ parameter("toBookingDateTime", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<InteropTransactionsData>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun getClientKyc(accountId: String): InteropKycResponseData {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/interoperation/accounts/${"$accountId".encodeURLPath()}/kyc")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<InteropKycResponseData>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun getQuote(transactionCode: String, quoteCode: String):
      InteropQuoteResponseData {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/interoperation/transactions/${"$transactionCode".encodeURLPath()}/quotes/${"$quoteCode".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<InteropQuoteResponseData>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun getTransactionRequest(transactionCode: String, requestCode: String):
      InteropTransactionRequestResponseData {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/interoperation/transactions/${"$transactionCode".encodeURLPath()}/requests/${"$requestCode".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<InteropTransactionRequestResponseData>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun getTransfer(transactionCode: String, transferCode: String):
      InteropTransferResponseData {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/interoperation/transactions/${"$transactionCode".encodeURLPath()}/transfers/${"$transferCode".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<InteropTransferResponseData>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun health() {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/interoperation/health")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<Unit>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun loanRepayment(accountId: String): String {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/interoperation/transactions/${"$accountId".encodeURLPath()}/loanrepayment")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<String>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun performTransfer(interopTransferRequestData: InteropTransferRequestData,
      action: String?): InteropTransferResponseData {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/interoperation/transfers")
        action?.let{ parameter("action", "$it") }
        }
        setBody(interopTransferRequestData) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<InteropTransferResponseData>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun registerAccountIdentifier(
    idType: String,
    idValue: String,
    interopIdentifierRequestData: InteropIdentifierRequestData,
  ): InteropIdentifierAccountResponseData {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/interoperation/parties/${"$idType".encodeURLPath()}/${"$idValue".encodeURLPath()}")
        }
        setBody(interopIdentifierRequestData) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<InteropIdentifierAccountResponseData>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun registerAccountIdentifier1(
    idType: String,
    idValue: String,
    subIdOrType: String,
    interopIdentifierRequestData: InteropIdentifierRequestData,
  ): InteropIdentifierAccountResponseData {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/interoperation/parties/${"$idType".encodeURLPath()}/${"$idValue".encodeURLPath()}/${"$subIdOrType".encodeURLPath()}")
        }
        setBody(interopIdentifierRequestData) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<InteropIdentifierAccountResponseData>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }
}

public class _InterOperationApiProvider : ClassProvider<InterOperationApi> {
  override fun create(_ktorfit: Ktorfit): InterOperationApi = _InterOperationApiImpl(_ktorfit)
}

public fun Ktorfit.createInterOperationApi(): InterOperationApi = _InterOperationApiImpl(this)
