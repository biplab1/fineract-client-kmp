// Generated by Ktorfit
@file:Suppress("warnings")

package org.openapitools.client.apis

import de.jensklingenberg.ktorfit.Ktorfit
import de.jensklingenberg.ktorfit.`internal`.ClassProvider
import de.jensklingenberg.ktorfit.`internal`.InternalKtorfitApi
import de.jensklingenberg.ktorfit.`internal`.KtorfitConverterHelper
import de.jensklingenberg.ktorfit.converter.TypeData
import io.ktor.client.request.HttpRequestBuilder
import io.ktor.client.request.headers
import io.ktor.client.request.parameter
import io.ktor.client.request.setBody
import io.ktor.http.HttpMethod
import io.ktor.http.URLBuilder
import io.ktor.http.decodeURLQueryComponent
import io.ktor.http.encodeURLPath
import io.ktor.http.takeFrom
import io.ktor.util.reflect.typeInfo
import kotlin.Long
import kotlin.OptIn
import kotlin.Suppress
import kotlin.collections.List
import org.openapitools.client.models.DeleteInterestRateChartsChartIdResponse
import org.openapitools.client.models.GetInterestRateChartsResponse
import org.openapitools.client.models.GetInterestRateChartsTemplateResponse
import org.openapitools.client.models.PostInterestRateChartsRequest
import org.openapitools.client.models.PostInterestRateChartsResponse
import org.openapitools.client.models.PutInterestRateChartsChartIdRequest
import org.openapitools.client.models.PutInterestRateChartsChartIdResponse

@OptIn(InternalKtorfitApi::class)
public class _InterestRateChartApiImpl(
  private val _ktorfit: Ktorfit,
) : InterestRateChartApi {
  private val _helper: KtorfitConverterHelper = KtorfitConverterHelper(_ktorfit)

  override suspend fun create10(postInterestRateChartsRequest: PostInterestRateChartsRequest):
      PostInterestRateChartsResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/interestratecharts")
        }
        setBody(postInterestRateChartsRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PostInterestRateChartsResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun delete14(chartId: Long): DeleteInterestRateChartsChartIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("DELETE")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/interestratecharts/${"$chartId".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<DeleteInterestRateChartsChartIdResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveAll26(productId: Long?): List<GetInterestRateChartsResponse> {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/interestratecharts")
        productId?.let{ parameter("productId", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<List<GetInterestRateChartsResponse>>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveOne17(chartId: Long): GetInterestRateChartsResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/interestratecharts/${"$chartId".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetInterestRateChartsResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun template9(): GetInterestRateChartsTemplateResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/interestratecharts/template")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetInterestRateChartsTemplateResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun update15(chartId: Long,
      putInterestRateChartsChartIdRequest: PutInterestRateChartsChartIdRequest):
      PutInterestRateChartsChartIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("PUT")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/interestratecharts/${"$chartId".encodeURLPath()}")
        }
        setBody(putInterestRateChartsChartIdRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PutInterestRateChartsChartIdResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }
}

public class _InterestRateChartApiProvider : ClassProvider<InterestRateChartApi> {
  override fun create(_ktorfit: Ktorfit): InterestRateChartApi = _InterestRateChartApiImpl(_ktorfit)
}

public fun Ktorfit.createInterestRateChartApi(): InterestRateChartApi =
    _InterestRateChartApiImpl(this)
