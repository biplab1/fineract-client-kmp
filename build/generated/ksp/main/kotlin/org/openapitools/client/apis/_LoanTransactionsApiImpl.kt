// Generated by Ktorfit
@file:Suppress("warnings")

package org.openapitools.client.apis

import de.jensklingenberg.ktorfit.Ktorfit
import de.jensklingenberg.ktorfit.`internal`.ClassProvider
import de.jensklingenberg.ktorfit.`internal`.InternalKtorfitApi
import de.jensklingenberg.ktorfit.`internal`.KtorfitConverterHelper
import de.jensklingenberg.ktorfit.converter.TypeData
import io.ktor.client.request.HttpRequestBuilder
import io.ktor.client.request.headers
import io.ktor.client.request.parameter
import io.ktor.client.request.setBody
import io.ktor.http.HttpMethod
import io.ktor.http.URLBuilder
import io.ktor.http.decodeURLQueryComponent
import io.ktor.http.encodeURLPath
import io.ktor.http.takeFrom
import io.ktor.util.reflect.typeInfo
import kotlin.Long
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import org.openapitools.client.models.GetLoansLoanIdTransactionsTemplateResponse
import org.openapitools.client.models.GetLoansLoanIdTransactionsTransactionIdResponse
import org.openapitools.client.models.PostLoansLoanIdTransactionsRequest
import org.openapitools.client.models.PostLoansLoanIdTransactionsResponse
import org.openapitools.client.models.PostLoansLoanIdTransactionsTransactionIdRequest
import org.openapitools.client.models.PutChargeTransactionChangesRequest
import org.openapitools.client.models.PutChargeTransactionChangesResponse

@OptIn(InternalKtorfitApi::class)
public class _LoanTransactionsApiImpl(
  private val _ktorfit: Ktorfit,
) : LoanTransactionsApi {
  private val _helper: KtorfitConverterHelper = KtorfitConverterHelper(_ktorfit)

  override suspend fun adjustLoanTransaction(
    loanId: Long,
    transactionId: Long,
    postLoansLoanIdTransactionsTransactionIdRequest: PostLoansLoanIdTransactionsTransactionIdRequest,
    command: String?,
  ): PostLoansLoanIdTransactionsResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/loans/${"$loanId".encodeURLPath()}/transactions/${"$transactionId".encodeURLPath()}")
        command?.let{ parameter("command", "$it") }
        }
        setBody(postLoansLoanIdTransactionsTransactionIdRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PostLoansLoanIdTransactionsResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun adjustLoanTransaction1(
    loanId: Long,
    externalTransactionId: String,
    postLoansLoanIdTransactionsTransactionIdRequest: PostLoansLoanIdTransactionsTransactionIdRequest,
    command: String?,
  ): PostLoansLoanIdTransactionsResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/loans/${"$loanId".encodeURLPath()}/transactions/external-id/${"$externalTransactionId".encodeURLPath()}")
        command?.let{ parameter("command", "$it") }
        }
        setBody(postLoansLoanIdTransactionsTransactionIdRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PostLoansLoanIdTransactionsResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun adjustLoanTransaction2(
    loanExternalId: String,
    transactionId: Long,
    postLoansLoanIdTransactionsTransactionIdRequest: PostLoansLoanIdTransactionsTransactionIdRequest,
    command: String?,
  ): PostLoansLoanIdTransactionsResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/loans/external-id/${"$loanExternalId".encodeURLPath()}/transactions/${"$transactionId".encodeURLPath()}")
        command?.let{ parameter("command", "$it") }
        }
        setBody(postLoansLoanIdTransactionsTransactionIdRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PostLoansLoanIdTransactionsResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun adjustLoanTransaction3(
    loanExternalId: String,
    externalTransactionId: String,
    postLoansLoanIdTransactionsTransactionIdRequest: PostLoansLoanIdTransactionsTransactionIdRequest,
    command: String?,
  ): PostLoansLoanIdTransactionsResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/loans/external-id/${"$loanExternalId".encodeURLPath()}/transactions/external-id/${"$externalTransactionId".encodeURLPath()}")
        command?.let{ parameter("command", "$it") }
        }
        setBody(postLoansLoanIdTransactionsTransactionIdRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PostLoansLoanIdTransactionsResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun executeLoanTransaction(
    loanId: Long,
    postLoansLoanIdTransactionsRequest: PostLoansLoanIdTransactionsRequest,
    command: String?,
  ): PostLoansLoanIdTransactionsResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/loans/${"$loanId".encodeURLPath()}/transactions")
        command?.let{ parameter("command", "$it") }
        }
        setBody(postLoansLoanIdTransactionsRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PostLoansLoanIdTransactionsResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun executeLoanTransaction1(
    loanExternalId: String,
    postLoansLoanIdTransactionsRequest: PostLoansLoanIdTransactionsRequest,
    command: String?,
  ): PostLoansLoanIdTransactionsResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/loans/external-id/${"$loanExternalId".encodeURLPath()}/transactions")
        command?.let{ parameter("command", "$it") }
        }
        setBody(postLoansLoanIdTransactionsRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PostLoansLoanIdTransactionsResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveTransaction(
    loanId: Long,
    transactionId: Long,
    fields: String?,
  ): GetLoansLoanIdTransactionsTransactionIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/loans/${"$loanId".encodeURLPath()}/transactions/${"$transactionId".encodeURLPath()}")
        fields?.let{ parameter("fields", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetLoansLoanIdTransactionsTransactionIdResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveTransactionByLoanExternalIdAndTransactionExternalId(
    loanExternalId: String,
    externalTransactionId: String,
    fields: String?,
  ): GetLoansLoanIdTransactionsTransactionIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/loans/external-id/${"$loanExternalId".encodeURLPath()}/transactions/external-id/${"$externalTransactionId".encodeURLPath()}")
        fields?.let{ parameter("fields", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetLoansLoanIdTransactionsTransactionIdResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveTransactionByLoanExternalIdAndTransactionId(
    loanExternalId: String,
    transactionId: Long,
    fields: String?,
  ): GetLoansLoanIdTransactionsTransactionIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/loans/external-id/${"$loanExternalId".encodeURLPath()}/transactions/${"$transactionId".encodeURLPath()}")
        fields?.let{ parameter("fields", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetLoansLoanIdTransactionsTransactionIdResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveTransactionByTransactionExternalId(
    loanId: Long,
    externalTransactionId: String,
    fields: String?,
  ): GetLoansLoanIdTransactionsTransactionIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/loans/${"$loanId".encodeURLPath()}/transactions/external-id/${"$externalTransactionId".encodeURLPath()}")
        fields?.let{ parameter("fields", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetLoansLoanIdTransactionsTransactionIdResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveTransactionTemplate(
    loanId: Long,
    command: String?,
    dateFormat: String?,
    transactionDate: String?,
    locale: String?,
  ): GetLoansLoanIdTransactionsTemplateResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/loans/${"$loanId".encodeURLPath()}/transactions/template")
        command?.let{ parameter("command", "$it") }
        dateFormat?.let{ parameter("dateFormat", "$it") }
        transactionDate?.let{ parameter("transactionDate", "$it") }
        locale?.let{ parameter("locale", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetLoansLoanIdTransactionsTemplateResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveTransactionTemplate1(
    loanExternalId: String,
    command: String?,
    dateFormat: String?,
    transactionDate: String?,
    locale: String?,
  ): GetLoansLoanIdTransactionsTemplateResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/loans/external-id/${"$loanExternalId".encodeURLPath()}/transactions/template")
        command?.let{ parameter("command", "$it") }
        dateFormat?.let{ parameter("dateFormat", "$it") }
        transactionDate?.let{ parameter("transactionDate", "$it") }
        locale?.let{ parameter("locale", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetLoansLoanIdTransactionsTemplateResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun undoWaiveCharge(
    loanId: Long,
    transactionId: Long,
    putChargeTransactionChangesRequest: PutChargeTransactionChangesRequest,
  ): PutChargeTransactionChangesResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("PUT")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/loans/${"$loanId".encodeURLPath()}/transactions/${"$transactionId".encodeURLPath()}")
        }
        setBody(putChargeTransactionChangesRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PutChargeTransactionChangesResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun undoWaiveCharge1(
    loanId: Long,
    transactionExternalId: String,
    putChargeTransactionChangesRequest: PutChargeTransactionChangesRequest,
  ): PutChargeTransactionChangesResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("PUT")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/loans/${"$loanId".encodeURLPath()}/transactions/external-id/${"$transactionExternalId".encodeURLPath()}")
        }
        setBody(putChargeTransactionChangesRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PutChargeTransactionChangesResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun undoWaiveCharge2(
    loanExternalId: String,
    transactionId: Long,
    putChargeTransactionChangesRequest: PutChargeTransactionChangesRequest,
  ): PutChargeTransactionChangesResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("PUT")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/loans/external-id/${"$loanExternalId".encodeURLPath()}/transactions/${"$transactionId".encodeURLPath()}")
        }
        setBody(putChargeTransactionChangesRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PutChargeTransactionChangesResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun undoWaiveCharge3(
    loanExternalId: String,
    transactionExternalId: String,
    putChargeTransactionChangesRequest: PutChargeTransactionChangesRequest,
  ): PutChargeTransactionChangesResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("PUT")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/loans/external-id/${"$loanExternalId".encodeURLPath()}/transactions/external-id/${"$transactionExternalId".encodeURLPath()}")
        }
        setBody(putChargeTransactionChangesRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PutChargeTransactionChangesResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }
}

public class _LoanTransactionsApiProvider : ClassProvider<LoanTransactionsApi> {
  override fun create(_ktorfit: Ktorfit): LoanTransactionsApi = _LoanTransactionsApiImpl(_ktorfit)
}

public fun Ktorfit.createLoanTransactionsApi(): LoanTransactionsApi = _LoanTransactionsApiImpl(this)
