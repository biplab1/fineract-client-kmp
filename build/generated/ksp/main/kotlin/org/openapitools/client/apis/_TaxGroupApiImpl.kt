// Generated by Ktorfit
@file:Suppress("warnings")

package org.openapitools.client.apis

import de.jensklingenberg.ktorfit.Ktorfit
import de.jensklingenberg.ktorfit.`internal`.ClassProvider
import de.jensklingenberg.ktorfit.`internal`.InternalKtorfitApi
import de.jensklingenberg.ktorfit.`internal`.KtorfitConverterHelper
import de.jensklingenberg.ktorfit.converter.TypeData
import io.ktor.client.request.HttpRequestBuilder
import io.ktor.client.request.headers
import io.ktor.client.request.parameter
import io.ktor.client.request.setBody
import io.ktor.http.HttpMethod
import io.ktor.http.URLBuilder
import io.ktor.http.decodeURLQueryComponent
import io.ktor.http.encodeURLPath
import io.ktor.http.takeFrom
import io.ktor.util.reflect.typeInfo
import kotlin.Long
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List
import org.openapitools.client.models.GetTaxesGroupResponse
import org.openapitools.client.models.PostTaxesGroupRequest
import org.openapitools.client.models.PostTaxesGroupResponse
import org.openapitools.client.models.PutTaxesGroupTaxGroupIdRequest
import org.openapitools.client.models.PutTaxesGroupTaxGroupIdResponse

@OptIn(InternalKtorfitApi::class)
public class _TaxGroupApiImpl(
  private val _ktorfit: Ktorfit,
) : TaxGroupApi {
  private val _helper: KtorfitConverterHelper = KtorfitConverterHelper(_ktorfit)

  override suspend fun createTaxGroup(postTaxesGroupRequest: PostTaxesGroupRequest):
      PostTaxesGroupResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/taxes/group")
        }
        setBody(postTaxesGroupRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PostTaxesGroupResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveAllTaxGroups(): List<GetTaxesGroupResponse> {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/taxes/group")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<List<GetTaxesGroupResponse>>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveTaxGroup(taxGroupId: Long): GetTaxesGroupResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/taxes/group/${"$taxGroupId".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetTaxesGroupResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveTemplate22(): String {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/taxes/group/template")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<String>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun updateTaxGroup(taxGroupId: Long,
      putTaxesGroupTaxGroupIdRequest: PutTaxesGroupTaxGroupIdRequest):
      PutTaxesGroupTaxGroupIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("PUT")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/taxes/group/${"$taxGroupId".encodeURLPath()}")
        }
        setBody(putTaxesGroupTaxGroupIdRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PutTaxesGroupTaxGroupIdResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }
}

public class _TaxGroupApiProvider : ClassProvider<TaxGroupApi> {
  override fun create(_ktorfit: Ktorfit): TaxGroupApi = _TaxGroupApiImpl(_ktorfit)
}

public fun Ktorfit.createTaxGroupApi(): TaxGroupApi = _TaxGroupApiImpl(this)
