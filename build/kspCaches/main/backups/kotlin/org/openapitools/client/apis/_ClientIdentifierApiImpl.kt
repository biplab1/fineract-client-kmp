// Generated by Ktorfit
@file:Suppress("warnings")

package org.openapitools.client.apis

import de.jensklingenberg.ktorfit.Ktorfit
import de.jensklingenberg.ktorfit.`internal`.ClassProvider
import de.jensklingenberg.ktorfit.`internal`.InternalKtorfitApi
import de.jensklingenberg.ktorfit.`internal`.KtorfitConverterHelper
import de.jensklingenberg.ktorfit.converter.TypeData
import io.ktor.client.request.HttpRequestBuilder
import io.ktor.client.request.headers
import io.ktor.client.request.parameter
import io.ktor.client.request.setBody
import io.ktor.http.HttpMethod
import io.ktor.http.URLBuilder
import io.ktor.http.decodeURLQueryComponent
import io.ktor.http.encodeURLPath
import io.ktor.http.takeFrom
import io.ktor.util.reflect.typeInfo
import kotlin.Long
import kotlin.OptIn
import kotlin.Suppress
import kotlin.collections.List
import org.openapitools.client.models.DeleteClientsClientIdIdentifiersIdentifierIdResponse
import org.openapitools.client.models.GetClientsClientIdIdentifiersResponse
import org.openapitools.client.models.GetClientsClientIdIdentifiersTemplateResponse
import org.openapitools.client.models.PostClientsClientIdIdentifiersRequest
import org.openapitools.client.models.PostClientsClientIdIdentifiersResponse
import org.openapitools.client.models.PutClientsClientIdIdentifiersIdentifierIdRequest
import org.openapitools.client.models.PutClientsClientIdIdentifiersIdentifierIdResponse

@OptIn(InternalKtorfitApi::class)
public class _ClientIdentifierApiImpl(
  private val _ktorfit: Ktorfit,
) : ClientIdentifierApi {
  private val _helper: KtorfitConverterHelper = KtorfitConverterHelper(_ktorfit)

  override suspend fun createClientIdentifier(clientId: Long,
      postClientsClientIdIdentifiersRequest: PostClientsClientIdIdentifiersRequest):
      PostClientsClientIdIdentifiersResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/clients/${"$clientId".encodeURLPath()}/identifiers")
        }
        setBody(postClientsClientIdIdentifiersRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PostClientsClientIdIdentifiersResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun deleteClientIdentifier(clientId: Long, identifierId: Long):
      DeleteClientsClientIdIdentifiersIdentifierIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("DELETE")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/clients/${"$clientId".encodeURLPath()}/identifiers/${"$identifierId".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<DeleteClientsClientIdIdentifiersIdentifierIdResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun newClientIdentifierDetails(clientId: Long):
      GetClientsClientIdIdentifiersTemplateResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/clients/${"$clientId".encodeURLPath()}/identifiers/template")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetClientsClientIdIdentifiersTemplateResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveAllClientIdentifiers(clientId: Long):
      List<GetClientsClientIdIdentifiersResponse> {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/clients/${"$clientId".encodeURLPath()}/identifiers")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<List<GetClientsClientIdIdentifiersResponse>>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveClientIdentifiers(clientId: Long, identifierId: Long):
      GetClientsClientIdIdentifiersResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/clients/${"$clientId".encodeURLPath()}/identifiers/${"$identifierId".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetClientsClientIdIdentifiersResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun updateClientIdentifer(
    clientId: Long,
    identifierId: Long,
    putClientsClientIdIdentifiersIdentifierIdRequest: PutClientsClientIdIdentifiersIdentifierIdRequest,
  ): PutClientsClientIdIdentifiersIdentifierIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("PUT")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/clients/${"$clientId".encodeURLPath()}/identifiers/${"$identifierId".encodeURLPath()}")
        }
        setBody(putClientsClientIdIdentifiersIdentifierIdRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PutClientsClientIdIdentifiersIdentifierIdResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }
}

public class _ClientIdentifierApiProvider : ClassProvider<ClientIdentifierApi> {
  override fun create(_ktorfit: Ktorfit): ClientIdentifierApi = _ClientIdentifierApiImpl(_ktorfit)
}

public fun Ktorfit.createClientIdentifierApi(): ClientIdentifierApi = _ClientIdentifierApiImpl(this)
