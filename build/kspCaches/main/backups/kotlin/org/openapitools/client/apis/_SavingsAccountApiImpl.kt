// Generated by Ktorfit
@file:Suppress("warnings")

package org.openapitools.client.apis

import de.jensklingenberg.ktorfit.Ktorfit
import de.jensklingenberg.ktorfit.`internal`.ClassProvider
import de.jensklingenberg.ktorfit.`internal`.InternalKtorfitApi
import de.jensklingenberg.ktorfit.`internal`.KtorfitConverterHelper
import de.jensklingenberg.ktorfit.converter.TypeData
import io.ktor.client.request.HttpRequestBuilder
import io.ktor.client.request.forms.FormDataContent
import io.ktor.client.request.forms.MultiPartFormDataContent
import io.ktor.client.request.forms.formData
import io.ktor.client.request.headers
import io.ktor.client.request.parameter
import io.ktor.client.request.setBody
import io.ktor.http.HttpMethod
import io.ktor.http.Parameters
import io.ktor.http.URLBuilder
import io.ktor.http.decodeURLQueryComponent
import io.ktor.http.encodeURLPath
import io.ktor.http.takeFrom
import io.ktor.util.reflect.typeInfo
import kotlin.Boolean
import kotlin.Int
import kotlin.Long
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import okhttp3.MultipartBody
import org.openapitools.client.models.DeleteSavingsAccountsAccountIdResponse
import org.openapitools.client.models.GetSavingsAccountsAccountIdResponse
import org.openapitools.client.models.GetSavingsAccountsResponse
import org.openapitools.client.models.GetSavingsAccountsTemplateResponse
import org.openapitools.client.models.PostSavingsAccountsAccountIdRequest
import org.openapitools.client.models.PostSavingsAccountsAccountIdResponse
import org.openapitools.client.models.PostSavingsAccountsRequest
import org.openapitools.client.models.PostSavingsAccountsResponse
import org.openapitools.client.models.PutSavingsAccountsAccountIdRequest
import org.openapitools.client.models.PutSavingsAccountsAccountIdResponse

@OptIn(InternalKtorfitApi::class)
public class _SavingsAccountApiImpl(
  private val _ktorfit: Ktorfit,
) : SavingsAccountApi {
  private val _helper: KtorfitConverterHelper = KtorfitConverterHelper(_ktorfit)

  override suspend fun delete19(accountId: Long): DeleteSavingsAccountsAccountIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("DELETE")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/savingsaccounts/${"$accountId".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<DeleteSavingsAccountsAccountIdResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun delete20(externalId: String): DeleteSavingsAccountsAccountIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("DELETE")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/savingsaccounts/external-id/${"$externalId".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<DeleteSavingsAccountsAccountIdResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun getSavingsTemplate(
    officeId: Long?,
    staffId: Long?,
    dateFormat: String?,
  ) {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/savingsaccounts/downloadtemplate")
        officeId?.let{ parameter("officeId", "$it") }
        staffId?.let{ parameter("staffId", "$it") }
        dateFormat?.let{ parameter("dateFormat", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<Unit>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun getSavingsTransactionTemplate(officeId: Long?, dateFormat: String?) {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/savingsaccounts/transactions/downloadtemplate")
        officeId?.let{ parameter("officeId", "$it") }
        dateFormat?.let{ parameter("dateFormat", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<Unit>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun handleCommands6(
    accountId: Long,
    postSavingsAccountsAccountIdRequest: PostSavingsAccountsAccountIdRequest,
    command: String?,
  ): PostSavingsAccountsAccountIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/savingsaccounts/${"$accountId".encodeURLPath()}")
        command?.let{ parameter("command", "$it") }
        }
        setBody(postSavingsAccountsAccountIdRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PostSavingsAccountsAccountIdResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun handleCommands7(
    externalId: String,
    postSavingsAccountsAccountIdRequest: PostSavingsAccountsAccountIdRequest,
    command: String?,
  ): PostSavingsAccountsAccountIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/savingsaccounts/external-id/${"$externalId".encodeURLPath()}")
        command?.let{ parameter("command", "$it") }
        }
        setBody(postSavingsAccountsAccountIdRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PostSavingsAccountsAccountIdResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun handleGSIMCommands(
    parentAccountId: Long,
    command: String?,
    body: String?,
  ): String {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/savingsaccounts/gsimcommands/${"$parentAccountId".encodeURLPath()}")
        command?.let{ parameter("command", "$it") }
        }
        setBody(body) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<String>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun postSavingsTemplate(
    dateFormat: String,
    locale: String,
    uploadedInputStream: MultipartBody.Part,
  ): String {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/savingsaccounts/uploadtemplate")
        }
        val __formData = formData {
        dateFormat?.let{ append("dateFormat", "${it}") }
        locale?.let{ append("locale", "${it}") }
        uploadedInputStream?.let{ append("", "${it}") }
        }
        setBody(MultiPartFormDataContent(__formData))
         
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<String>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun postSavingsTransactionTemplate(
    dateFormat: String,
    locale: String,
    uploadedInputStream: MultipartBody.Part,
  ): String {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/savingsaccounts/transactions/uploadtemplate")
        }
        val __formData = formData {
        dateFormat?.let{ append("dateFormat", "${it}") }
        locale?.let{ append("locale", "${it}") }
        uploadedInputStream?.let{ append("", "${it}") }
        }
        setBody(MultiPartFormDataContent(__formData))
         
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<String>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveAll33(
    externalId: String?,
    offset: Int?,
    limit: Int?,
    orderBy: String?,
    sortOrder: String?,
  ): GetSavingsAccountsResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/savingsaccounts")
        externalId?.let{ parameter("externalId", "$it") }
        offset?.let{ parameter("offset", "$it") }
        limit?.let{ parameter("limit", "$it") }
        orderBy?.let{ parameter("orderBy", "$it") }
        sortOrder?.let{ parameter("sortOrder", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetSavingsAccountsResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveOne25(
    accountId: Long,
    staffInSelectedOfficeOnly: Boolean?,
    chargeStatus: String?,
  ): GetSavingsAccountsAccountIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/savingsaccounts/${"$accountId".encodeURLPath()}")
        staffInSelectedOfficeOnly?.let{ parameter("staffInSelectedOfficeOnly", "$it") }
        chargeStatus?.let{ parameter("chargeStatus", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetSavingsAccountsAccountIdResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveOne26(
    externalId: String,
    staffInSelectedOfficeOnly: Boolean?,
    chargeStatus: String?,
  ): GetSavingsAccountsAccountIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/savingsaccounts/external-id/${"$externalId".encodeURLPath()}")
        staffInSelectedOfficeOnly?.let{ parameter("staffInSelectedOfficeOnly", "$it") }
        chargeStatus?.let{ parameter("chargeStatus", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetSavingsAccountsAccountIdResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun submitApplication2(postSavingsAccountsRequest: PostSavingsAccountsRequest):
      PostSavingsAccountsResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/savingsaccounts")
        }
        setBody(postSavingsAccountsRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PostSavingsAccountsResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun submitGSIMApplication(body: String?): String {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/savingsaccounts/gsim")
        }
        setBody(body) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<String>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun template14(
    clientId: Long?,
    groupId: Long?,
    productId: Long?,
    staffInSelectedOfficeOnly: Boolean?,
  ): GetSavingsAccountsTemplateResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/savingsaccounts/template")
        clientId?.let{ parameter("clientId", "$it") }
        groupId?.let{ parameter("groupId", "$it") }
        productId?.let{ parameter("productId", "$it") }
        staffInSelectedOfficeOnly?.let{ parameter("staffInSelectedOfficeOnly", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetSavingsAccountsTemplateResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun update20(
    accountId: Long,
    putSavingsAccountsAccountIdRequest: PutSavingsAccountsAccountIdRequest,
    command: String?,
  ): PutSavingsAccountsAccountIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("PUT")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/savingsaccounts/${"$accountId".encodeURLPath()}")
        command?.let{ parameter("command", "$it") }
        }
        setBody(putSavingsAccountsAccountIdRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PutSavingsAccountsAccountIdResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun update21(
    externalId: String,
    putSavingsAccountsAccountIdRequest: PutSavingsAccountsAccountIdRequest,
    command: String?,
  ): PutSavingsAccountsAccountIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("PUT")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/savingsaccounts/external-id/${"$externalId".encodeURLPath()}")
        command?.let{ parameter("command", "$it") }
        }
        setBody(putSavingsAccountsAccountIdRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PutSavingsAccountsAccountIdResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun updateGsim(parentAccountId: Long, body: String?): String {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("PUT")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/savingsaccounts/gsim/${"$parentAccountId".encodeURLPath()}")
        }
        setBody(body) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<String>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }
}

public class _SavingsAccountApiProvider : ClassProvider<SavingsAccountApi> {
  override fun create(_ktorfit: Ktorfit): SavingsAccountApi = _SavingsAccountApiImpl(_ktorfit)
}

public fun Ktorfit.createSavingsAccountApi(): SavingsAccountApi = _SavingsAccountApiImpl(this)
