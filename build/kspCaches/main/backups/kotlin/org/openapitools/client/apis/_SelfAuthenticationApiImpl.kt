// Generated by Ktorfit
@file:Suppress("warnings")

package org.openapitools.client.apis

import de.jensklingenberg.ktorfit.Ktorfit
import de.jensklingenberg.ktorfit.`internal`.ClassProvider
import de.jensklingenberg.ktorfit.`internal`.InternalKtorfitApi
import de.jensklingenberg.ktorfit.`internal`.KtorfitConverterHelper
import de.jensklingenberg.ktorfit.converter.TypeData
import io.ktor.client.request.HttpRequestBuilder
import io.ktor.client.request.headers
import io.ktor.client.request.parameter
import io.ktor.client.request.setBody
import io.ktor.http.HttpMethod
import io.ktor.http.URLBuilder
import io.ktor.http.decodeURLQueryComponent
import io.ktor.http.encodeURLPath
import io.ktor.http.takeFrom
import io.ktor.util.reflect.typeInfo
import kotlin.OptIn
import kotlin.Suppress
import org.openapitools.client.models.PostAuthenticationRequest
import org.openapitools.client.models.PostSelfAuthenticationResponse

@OptIn(InternalKtorfitApi::class)
public class _SelfAuthenticationApiImpl(
  private val _ktorfit: Ktorfit,
) : SelfAuthenticationApi {
  private val _helper: KtorfitConverterHelper = KtorfitConverterHelper(_ktorfit)

  override suspend fun authenticate1(postAuthenticationRequest: PostAuthenticationRequest):
      PostSelfAuthenticationResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/self/authentication")
        }
        setBody(postAuthenticationRequest) 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<PostSelfAuthenticationResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }
}

public class _SelfAuthenticationApiProvider : ClassProvider<SelfAuthenticationApi> {
  override fun create(_ktorfit: Ktorfit): SelfAuthenticationApi =
      _SelfAuthenticationApiImpl(_ktorfit)
}

public fun Ktorfit.createSelfAuthenticationApi(): SelfAuthenticationApi =
    _SelfAuthenticationApiImpl(this)
