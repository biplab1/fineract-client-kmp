// Generated by Ktorfit
@file:Suppress("warnings")

package org.openapitools.client.apis

import de.jensklingenberg.ktorfit.Ktorfit
import de.jensklingenberg.ktorfit.`internal`.ClassProvider
import de.jensklingenberg.ktorfit.`internal`.InternalKtorfitApi
import de.jensklingenberg.ktorfit.`internal`.KtorfitConverterHelper
import de.jensklingenberg.ktorfit.converter.TypeData
import io.ktor.client.request.HttpRequestBuilder
import io.ktor.client.request.forms.FormDataContent
import io.ktor.client.request.forms.MultiPartFormDataContent
import io.ktor.client.request.forms.formData
import io.ktor.client.request.headers
import io.ktor.client.request.parameter
import io.ktor.client.request.setBody
import io.ktor.http.HttpMethod
import io.ktor.http.Parameters
import io.ktor.http.URLBuilder
import io.ktor.http.decodeURLQueryComponent
import io.ktor.http.encodeURLPath
import io.ktor.http.takeFrom
import io.ktor.util.reflect.typeInfo
import kotlin.Boolean
import kotlin.Int
import kotlin.Long
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import okhttp3.MultipartBody
import org.openapitools.client.models.GetSelfClientsClientIdAccountsResponse
import org.openapitools.client.models.GetSelfClientsClientIdChargesChargeIdResponse
import org.openapitools.client.models.GetSelfClientsClientIdChargesResponse
import org.openapitools.client.models.GetSelfClientsClientIdResponse
import org.openapitools.client.models.GetSelfClientsClientIdTransactionsResponse
import org.openapitools.client.models.GetSelfClientsClientIdTransactionsTransactionIdResponse
import org.openapitools.client.models.GetSelfClientsResponse

@OptIn(InternalKtorfitApi::class)
public class _SelfClientApiImpl(
  private val _ktorfit: Ktorfit,
) : SelfClientApi {
  private val _helper: KtorfitConverterHelper = KtorfitConverterHelper(_ktorfit)

  override suspend fun addNewClientImage2(
    clientId: Long,
    contentLength: Long?,
    dateFormat: String,
    locale: String,
    uploadedInputStream: MultipartBody.Part,
  ): String {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("POST")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/self/clients/${"$clientId".encodeURLPath()}/images")
        }
        headers{
        contentLength?.let{ append("Content-Length", "$contentLength") }
        }
        val __formData = formData {
        dateFormat?.let{ append("dateFormat", "${it}") }
        locale?.let{ append("locale", "${it}") }
        uploadedInputStream?.let{ append("", "${it}") }
        }
        setBody(MultiPartFormDataContent(__formData))
         
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<String>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun deleteClientImage1(clientId: Long): String {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("DELETE")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/self/clients/${"$clientId".encodeURLPath()}/images")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<String>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveAll36(
    displayName: String?,
    firstName: String?,
    lastName: String?,
    offset: Int?,
    status: String?,
    limit: Int?,
    orderBy: String?,
    sortOrder: String?,
  ): GetSelfClientsResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/self/clients")
        displayName?.let{ parameter("displayName", "$it") }
        firstName?.let{ parameter("firstName", "$it") }
        lastName?.let{ parameter("lastName", "$it") }
        offset?.let{ parameter("offset", "$it") }
        status?.let{ parameter("status", "$it") }
        limit?.let{ parameter("limit", "$it") }
        orderBy?.let{ parameter("orderBy", "$it") }
        sortOrder?.let{ parameter("sortOrder", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetSelfClientsResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveAllClientCharges1(
    clientId: Long,
    chargeStatus: String?,
    pendingPayment: Boolean?,
    limit: Int?,
    offset: Int?,
  ): GetSelfClientsClientIdChargesResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/self/clients/${"$clientId".encodeURLPath()}/charges")
        chargeStatus?.let{ parameter("chargeStatus", "$it") }
        pendingPayment?.let{ parameter("pendingPayment", "$it") }
        limit?.let{ parameter("limit", "$it") }
        offset?.let{ parameter("offset", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetSelfClientsClientIdChargesResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveAllClientTransactions2(
    clientId: Long,
    offset: Int?,
    limit: Int?,
  ): GetSelfClientsClientIdTransactionsResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/self/clients/${"$clientId".encodeURLPath()}/transactions")
        offset?.let{ parameter("offset", "$it") }
        limit?.let{ parameter("limit", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetSelfClientsClientIdTransactionsResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveAssociatedAccounts2(clientId: Long):
      GetSelfClientsClientIdAccountsResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/self/clients/${"$clientId".encodeURLPath()}/accounts")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetSelfClientsClientIdAccountsResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveClientCharge1(clientId: Long, chargeId: Long):
      GetSelfClientsClientIdChargesChargeIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/self/clients/${"$clientId".encodeURLPath()}/charges/${"$chargeId".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetSelfClientsClientIdChargesChargeIdResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveClientTransaction4(clientId: Long, transactionId: Long):
      GetSelfClientsClientIdTransactionsTransactionIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl +
            "v1/self/clients/${"$clientId".encodeURLPath()}/transactions/${"$transactionId".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetSelfClientsClientIdTransactionsTransactionIdResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveImage1(
    clientId: Long,
    maxWidth: Int?,
    maxHeight: Int?,
    output: String?,
  ) {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/self/clients/${"$clientId".encodeURLPath()}/images")
        maxWidth?.let{ parameter("maxWidth", "$it") }
        maxHeight?.let{ parameter("maxHeight", "$it") }
        output?.let{ parameter("output", "$it") }
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<Unit>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveObligeeDetails2(clientId: Long): String {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/self/clients/${"$clientId".encodeURLPath()}/obligeedetails")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<String>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }

  override suspend fun retrieveOne28(clientId: Long): GetSelfClientsClientIdResponse {
    val _ext: HttpRequestBuilder.() -> Unit = {
        method = HttpMethod.parse("GET")
        url{
        takeFrom(_ktorfit.baseUrl + "v1/self/clients/${"$clientId".encodeURLPath()}")
        } 
        }
    val _typeData = TypeData.createTypeData(
    typeInfo = typeInfo<GetSelfClientsClientIdResponse>(),
    )
    return _helper.suspendRequest(_typeData,_ext)!!
  }
}

public class _SelfClientApiProvider : ClassProvider<SelfClientApi> {
  override fun create(_ktorfit: Ktorfit): SelfClientApi = _SelfClientApiImpl(_ktorfit)
}

public fun Ktorfit.createSelfClientApi(): SelfClientApi = _SelfClientApiImpl(this)
